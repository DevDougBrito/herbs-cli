const { usecase, step, Ok, Err } = require('buchu')
const { <%= props.name.pascalCase %> } = require('../../entities')
const { NotFoundError } = require('../../errors')

const useCase = ({ <%= props.name.camelCase %>Repository }) => () =>
  usecase('Find one <%= props.name.pascalCase %>', {
    // Input/Request metadata and validation 
    request: {
      id: String,
    },

    // Output/Response metadata
    response: <%= props.name.pascalCase %>,

    //Authorization with Audit
    // authorize: user => (user.canFindOne<%= props.name.pascalCase %> ? Ok() : Err()),
    authorize: user => Ok(user),

    'Update the <%= props.name.pascalCase %>': step(async ctx => {
      // ctx.ret is the Use Case return
      const [result] = await <%= props.name.camelCase %>Repository.findByID(ctx.req.id) 
      if(!result) return NotFoundError('<%= props.name.pascalCase %>', `<%= props.name.pascalCase %> entity not found by id: ${ctx.req.id}`)
      return (ctx.ret = <%= props.name.pascalCase %>.fromJSON(result))
    })
  })

module.exports = useCase