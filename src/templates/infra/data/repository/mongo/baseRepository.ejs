module.exports = class Repository {
    constructor({ collection, mongo }){
        this.collection = mongo.collection(collection)
    }

    async find(filter){
        return this.collection
            .find(filter)
            .toArray()
    }

    async find(filter, project){
        return this.collection
            .find(filter)
            .project(project)
            .toArray()
    }

    async findByID(id){
        if(!id) return {}

        return this.collection
            .findOne({ _id: id })
    }

    async findPaginated ({ skip = 0, limit = 0, sort = {}, query = {} }) {
        return await this.collection
          .find(query)
          .limit(limit)
          .skip(skip)
          .sort(sort)
          .toArray()
      }

    async insert(entity){
        const { ops } = await this.collection
            .insertOne(entity)
        return { id: ops[0]._id, ...ops[0] }
    }

    async insertMany(arrayEntity){
        return this.collection
            .insertMany(arrayEntity)
    }

    async update(filter, updateDocument){
        return this.collection
            .updateOne(filter, updateDocument)
    }

    async updateMany(filter, updateDocument){
        return this.collection
            .updateMany(filter, updateDocument)
    }

    async deleteByID(id){
        return this.collection
            .deleteOne({ _id: String(id)})
    }
    
    //TO DO: FindOne(filter, project)
    //TO DO: Update(id, entity)
    //TO DO: Replace(id, entity)
    //TO DO: Aggregate
    //TO DO: Watch
}