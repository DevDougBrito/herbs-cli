const express = require('express')
const renderShelfHTML = require('@herbsjs/herbsshelf')
const { herbarium } = require('@herbsjs/herbarium')
const connection = require('../data/database/connection')

<% if(props.graphql) {%>const { graphql } = require('./graphql')<% }%>
<% if(props.rest) {%>const { rest } = require('./rest')<% }%>

function herbsshelf(app) {
  const usecases = Array.from(herbarium.usecases.all).map(([_, item]) =>
            ({ usecase: item.usecase()(), id: item.id, tags: { group: item.group } }))

  app.get('/herbsshelf', (_, res) => {
    res.setHeader('Content-Type', 'text/html')
    const shelf = renderShelfHTML('<%- props.name %>', usecases)
    res.write(shelf)
    res.end()
  })
  // eslint-disable-next-line no-console
  console.info(`\n🌿 Herbs Shelf endpoint - /herbsshelf \n`)
}

async function start(config) {

  const injection = {}
  herbarium.requireAll({ repositoriesPath: '/src/infra/data/repositories' })
  for(const [_,{repository}] of herbarium.repositories.all)
    injection[repository.name] = new repository(await connection.connect(config))

  const app = express()
  <% if(props.rest) {%>await rest(app, injection, config)<% }%>
  <% if(props.graphql) {%>await graphql(app, injection, config)<% }%>
  await herbsshelf(app)

  return app.listen(
    { port: config.api.port },
    // eslint-disable-next-line no-console
    () => console.log(`🚀 Server UP and 🌪️  - http://localhost:${config.api.port}/`))
}

module.exports = { start }



