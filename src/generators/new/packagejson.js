const { exec } = require('child_process')
function childProcess (process, print) {
  return new Promise((resolve, reject) => {
    print.info('[INFO] Installing dependencies...')
    print.info(`> ${process}`)
    const cp = exec(process)

    cp.stdout.on('data', (data) => {
      console.log(data.toString())
    })

    cp.on('exit', () => {
      resolve()
    })

    cp.on('error', (error) => {
      reject(error)
    })
  })
}

async function installPkgs (useYarn, pkgs, print) {
  useYarn
    ? await childProcess(`yarn add ${pkgs.join([' '])}`, print)
    : await childProcess(`npm install ${pkgs.join([' '])}`, print)
}

module.exports =
  async ({
    template: { generate },
    parameters: {
      options: {
        name = 'herbs-project',
        description = 'project generated by herbs CLI S2',
        author = 'herbs CLI',
        license = 'MIT',
        mongo = false,
        postgres = false,
        yarn = false,
        graphql = false,
        rest = false
      }
    },
    print
  }) =>
    async () => {
      const migration = postgres
        ? `,
      "knex:make": "npx knex --knexfile knexFile.js migrate:make",
      "knex:migrate": "npx knex --knexfile knexFile.js migrate:latest",
      "knex:rollback": "npx knex --knexfile knexFile.js migrate:rollback",
      "knex:makeSeeds": "npx knex --knexfile knexFile.js seed:make",
      "knex:runSeeds": "npx knex --knexfile knexFile.js seed:run"`
        : ''

      await generate({
        template: 'package.json.ejs',
        target: 'package.json',
        props: {
          name,
          description,
          author,
          license,
          migration
        }
      })

      await installPkgs(yarn, ['@herbsjs/herbs', 'deepmerge'], print)

      const packages = [
        '@herbsjs/herbs2gql',
        '@herbsjs/herbsshelf',
        'sugar-env@1.5.14',
        'dotenv@10.0.0',
        'nodemon',
        'lodash.camelcase'
      ]

      if (mongo) {
        packages.push('mongodb')
      }

      if (postgres) {
        packages.push('@herbsjs/herbs2knex')
        packages.push('pg')
      }

      if (rest) {
        packages.push('express@4.17.1')
        packages.push('cors@2.8.5')
        packages.push('@herbsjs/herbs2rest')
      }

      if (graphql) {
        packages.push('graphql@15.5.1')
        packages.push('apollo-server@2.25.2')
        packages.push('apollo-server-express@2.25.2')
        packages.push('graphql-tools@8.1.0')
      }
      await installPkgs(yarn, packages, print)
    }
