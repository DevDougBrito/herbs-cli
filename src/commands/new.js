const factory = async ({ 
  template: { generate },
  packageManager,
  filesystem }) => {
  return {
    packageJson: async () => {
      const props = {
        name: 'herbs project',
        description: 'project generated by herbs CLI S2',
        author: 'herbs CLI',
        license: 'MIT' }
        await generate({
          template: 'package.json.ejs',
          target: `package.json`,
          props
        })

        await packageManager.add(['buchu', 'gotu'], { force: 'npm'})
    },
    entities: async () => {
      await generate({
        template: 'entities/user.ejs',
        target: `src/domain/entities/user.js`
      })
    },
    useCases: async () => {

      const entities = filesystem.list(`${filesystem.cwd()}/src/domain/entities`)

      for(const entityName of entities){
        const name = (entityName.charAt(0)
                                .toUpperCase() + 
                                entityName.slice(1)).replace('.js', '')
        await generate({
          template: 'usecases/useCase.ejs',
          target: `src/domain/useCases/create${name}.js`,
          props: { entity: name },
        })
      }
    }
  }
}
 
const cmd = {
  name: 'new',
  alias: ['n'],
  run: async toolbox => {
    const build = await factory(toolbox)
    await build.packageJson()
    await build.entities()
    await build.useCases()
  }
}

module.exports = cmd
