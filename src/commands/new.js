const generator = require('../generator')
const fs = require('fs')
const inquirer = require('inquirer')

const cmd = {
  name: 'new',
  alias: ['n'],
  run: async toolbox => {
    const questions = [
      {
        type: 'input',
        name: 'name',
        message: 'project name?',
        filter (val) {
          return val.toLowerCase()
        },
        default: 'herbs-project'
      },
      {
        type: 'input',
        name: 'description',
        message: 'project description?',
        filter (val) {
          return val.toLowerCase()
        },
        default: 'project generated by herbs-cli'
      },
      {
        type: 'input',
        name: 'author',
        message: "project author's name?",
        filter (val) {
          return val.toLowerCase()
        },
        default: 'herbs CLI'
      },
      {
        type: 'list',
        name: 'license',
        message: 'What license do you want to use?',
        choices: ['MIT', 'BSD', 'GNU'],
        default: ''
      },
      {
        type: 'confirm',
        name: 'graphql',
        message: 'Generate graphql layer?',
        default: true
      },
      {
        type: 'confirm',
        name: 'rest',
        message: 'Generate rest layer?',
        default: true
      },
      {
        type: 'list',
        name: 'database',
        message: 'What database do you want to use?',
        choices: ['Mongo', 'Postgres'],
        filter (val) {
          return val.toLowerCase()
        }
      },
      {
        type: 'list',
        name: 'database',
        message: 'What package manager do you want to use?',
        choices: ['Postgres', 'Mongo'],
        filter (val) {
          return val.toLowerCase()
        }
      },
      {
        type: 'input',
        name: 'entities',
        message: 'Specify your entities?',
        filter (val) {
          return val.toLowerCase()
        },
        default: 'optional'
      }
    ]

    inquirer.prompt(questions).then(async (answers) => {
      const dir = `${toolbox.filesystem.cwd()}/${answers.name}`

      if (!fs.existsSync(dir)) {
        fs.mkdirSync(dir)
      }
      process.chdir(dir)

      toolbox.parameters.options = answers
      toolbox.parameters.options.postgres = answers.database === 'postgres'
      toolbox.parameters.options.mongo = answers.database === 'mongo'
      toolbox.parameters.options.entities = answers.entities === 'optional' ? '' : answers.entities

      const generators = await generator(toolbox)
      const layers = Object.keys(generators)
      for (const layer of layers) await generators[layer]()
    })
  }
}

module.exports = cmd
